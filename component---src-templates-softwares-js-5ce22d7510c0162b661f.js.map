{"version":3,"file":"component---src-templates-softwares-js-5ce22d7510c0162b661f.js","mappings":"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","sources":["webpack://lastig-gastby/./src/components/styles/Softwares.styled.js","webpack://lastig-gastby/./src/templates/softwares.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const SoftwareList = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    text-decoration: none;\n`\n\nexport const Software = styled.div`\n    border-radius: 1rem;\n    border:2px solid black;\n    padding: 1rem;\n    margin: auto;\n    width: 80%;\n    text-decoration: inherit;\n`\n\nexport const SoftwareHead = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    text-decoration: inherit;\n    div {\n        font-size: 1.25rem;\n        text-decoration: inherit;\n        a {\n            text-decoration: inherit;\n            color: ${({theme}) => theme.colors[theme.teams[Math.floor(Math.random() * theme.teams.length)]]};\n        }\n    }\n`\nexport const SoftwareInfo = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    text-decoration: inherit;\n    div {\n        text-decoration: inherit;\n        a {text-decoration: inherit;}\n    }\n`\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Seo from '../components/seo'\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { theme } from '../theme'\nimport { SoftwareList, Software, SoftwareHead, SoftwareInfo } from '../components/styles/Softwares.styled'\nimport { useIntl } from 'react-intl'\nimport { Icon } from '@iconify-icon/react';\nimport { NavBar } from '../components/NavBar'\nimport { PublicationList } from '../components/CreateNodes';\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nChart.register(CategoryScale);\n\nexport default function SoftwaresPage({ data, pageContext }) {\n    const team = pageContext.team\n    const isLastigPage = (team.length > 1)\n    console.log(`Software PAGE : ${team} => ${isLastigPage}`)\n    data.allSoftwareCsv.nodes.forEach(element => {\n        console.log(`Software ${element.short_name}`)\n    });\n    const intl = useIntl()\n    function trans(text) { return intl.formatMessage({ id: text }) }\n  \n    function Doi({ doi }) {\n        if (!doi) { return <div></div>; }\n        return <div><a href={`https://www.doi.org/${doi}`} aria-label='doi'><Icon icon=\"academicons:doi\" width=\"2em\" height=\"2em\" /></a></div>;\n    }\n    function Teams({ teams }) {\n        if (!teams) { return <div></div>; }\n        return <div>Team(s): <b>{teams.join(\", \")}</b></div>;\n    }\n    function Publications({ repo }) {\n        if (!repo) { return <div></div>; }\n        const publications = data.allHalCsv.nodes.filter((n)=>n.softCodeRepository && n.softCodeRepository.includes(repo))\n        return <div>\n            <PublicationList nodes = {publications} type={null} theme={theme}/>\n        </div>;\n    }\n\n    return (\n        <Layout pageTitle={`${isLastigPage ? 'LASTIG' : team} Softwares`}>\n            <h1>{trans(`${isLastigPage ? 'LASTIG' : team} Softwares`)}</h1>\n            {(!isLastigPage) && <NavBar title={team} menus = {data.site.siteMetadata.menus[team]} team={team}/>}\n            <SoftwareList>\n                {\n                    data.allSoftwareCsv.nodes.map((node) => (\n                        <Software key={node.id}>\n                            <SoftwareHead $dataTheme={node.theme}>\n                                <div><a href={node.repo}>{node.short_name}</a></div>\n                            </SoftwareHead>\n                            <SoftwareInfo>\n                                <GatsbyImage image={getImage(node.image)} alt={node.short_name} />\n                                <Doi doi={node.doi} />\n                                <Teams teams={node.teams} />\n                            </SoftwareInfo>\n                            <Publications repo={node.repo} />\n                        </Software>\n                    ))\n                }\n            </SoftwareList>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query ($team: [String]) {\n        allSoftwareCsv(filter: { teams: { in: $team } }) {\n            nodes {\n                doi\n                id\n                name\n                date\n                short_name\n                repo\n                teams\n                HALid\n                SWHID\n                image {\n                    childImageSharp {\n                        gatsbyImageData(width: 200)\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                menuLinks {\n                    link\n                    name\n                    subMenu {\n                        link\n                        name\n                        subMenu {\n                            link\n                            name\n                        }\n                    }\n                }\n                menus {\n                    ACTE {\n                        link\n                        name\n                        subMenu {\n                        link\n                        name\n                        }\n                    }\n                    GEOVIS {\n                        link\n                        name\n                        subMenu {\n                        link\n                        name\n                        }\n                    }\n                    MEIG {\n                        link\n                        name\n                        subMenu {\n                        link\n                        name\n                        }\n                    }\n                    STRUDEL {\n                        link\n                        name\n                        subMenu {\n                        link\n                        name\n                        }\n                    }\n                }\n            }\n        }\n        allHalCsv {\n            nodes {\n                halId\n                id\n                citationRef\n                docType\n                fileMain\n                files\n                invitedCommunication\n                label_bibtex\n                popularLevel\n                proceedings\n                producedDate\n                title\n                authIdHalFullName {\n                    fullName\n                    idHal\n                }\n                peerReviewing\n                researchData\n                audience\n                doiId\n                softCodeRepository\n                arxivId\n                anrProjectTitle\n                europeanProjectTitle\n                publicationDate\n                teams\n                authors\n                keywords\n            }\n        }\n    }\n`\n\nexport const Head = ({pageContext}) => <Seo title={`${pageContext.team.length > 1 ? 'LASTIG' : pageContext.team} Softwares`} />\n"],"names":["SoftwareList","styled","div","withConfig","displayName","componentId","Software","SoftwareHead","_ref","theme","colors","teams","Math","floor","random","length","SoftwareInfo","SoftwaresPage","data","pageContext","team","isLastigPage","console","log","allSoftwareCsv","nodes","forEach","element","short_name","intl","useIntl","Doi","_ref2","doi","React","href","Icon","icon","width","height","Teams","_ref3","join","Publications","_ref4","repo","publications","allHalCsv","filter","n","softCodeRepository","includes","PublicationList","type","Layout","pageTitle","text","formatMessage","id","NavBar","title","menus","site","siteMetadata","map","node","key","$dataTheme","GatsbyImage","image","getImage","alt","Chart","register","CategoryScale","Head","_ref5","Seo"],"sourceRoot":""}